Uncertainty-Aware Multidimensional Scaling Supplemental Material David H¨agele, Tim Krake, and Daniel Weiskopf Abstract—In this supplemental material, we provide the detailed mathematical derivation of the uncertainty-aware multidimensional scaling (UAMDS) model for normal distributions that complements the main document: The paper on “Uncertainty-Aware Multidimensional Scaling” published in IEEE Transactions on Visualization and Computer Graphics [3]. Specifically, we evaluate the stress term resulting from our general UAMDS model, where we assume that the random vectors are normally distributed and independent, and that the projection operators are affine linear. In addition to the mathematical derivation, we provide additional visualizations for UAMDS that complement the techniques from the main document. 1 NORMAL DISTRIBUTION MODEL: BASIC EVALUATION Given random vectors P1,...,PK with realizations in the high-dimensional space RN and associated probability density functions fP1,..., fPK : RN → R, the goal is to find low-dimensional random vectors X1,...,XK via local projections Φ1,...,ΦK : RN → Rn and Xk = Φk ◦ Pk with realizations in a desired low-dimensional space Rn and associated probability density functions fX1,..., fXK : Rn → R such that the following stress is minimized (compare Section 3 from the main document): ˜S(Φ1,...,ΦK) = ∑ i,j Z RN Z RN fPi,Pj(v,w)·  ∥v−w∥2 2 − Φi(v)−Φj(w) 2 2 2 dv dw, (1) where fPi,Pj is the joint probability density function of fPi and fPj. 1.1 Basic Evaluation: Normal Distribution Assumption Given the generic model of UAMDS (Equation 1), the normal distribution model can be evaluated. To this end, the following assumption is made. Assumption 1: The random vectors P1,...,PK are independent and normally distributed with Pk ∼ N (µPk,ΣPk), µPk ∈ RN, ΣPk ∈ RN×N, and the singular value decompositions ΣPk = UPkSPkUPk T with SPk = diag(sPk 1 ,...,sPk N ) and UPk =  uPk 1 ... uPk N  . Due to Assumption 1, the joint probability density functions fPi,Pj(v,w) are fPi(v,w)· fPj(v,w) and the underlying probability density functions can be expressed in terms of the expected values µPk and covariance matrices ΣPk. To compute the stress ˜S, we have to distinguish between the degenerate case and the non-degenerate case. In the degenerate case, where singular values of the covariance matrix ΣPk can be zero, we need to express the integrals via a limit ΣPk ∗ → ΣPk, where ΣPk ∗ is a sequence of symmetric positive definite matrices. In the non-degenerate case, i.e., the covariance matrix ΣPk has only positive singular values (the matrix is symmetric positive definite), there are no singularities in the upcoming formulation (thus, the sequence can be defined as ΣPk ∗ = ΣPk). With these considerations, we can compute the stress ˜S as follows: ˜S(Φ1,...,ΦK) = ∑ i, j Z RN Z RN fPi,Pj(v,w)·  ∥v−w∥2 2 − Φi(v)−Φj(w) 2 2 2 dv dw (2) = ∑ i, j Z RN Z RN fPi(v,w)· fPj(v,w)·  ∥v−w∥2 2 − Φi(v)−Φj(w) 2 2 2 dv dw = ∑ i, j lim Σ Pj ∗ →ΣPj Z RN lim ΣPi∗ →ΣPi Z RN e− 1 2 (v−µPi)TΣPi∗ −1(v−µPi) q (2π)N ·det(ΣPi∗ ) e− 1 2 (w−µPj )TΣ Pj ∗ −1 (w−µPj ) q (2π)N ·det(ΣPj ∗ ) ·  ∥v−w∥2 2 − Φi(v)−Φ j(w) 2 2 2 dv dw. • All authors are with the University of Stuttgart. • david.haegele@visus.uni-stuttgart.de. • tim.krake@visus.uni-stuttgart.de. • daniel.weiskopf@visus.uni-stuttgart.de. Reference Format: David H¨agele, Tim Krake, and Daniel Weiskopf. 2022. Uncertainty-Aware Multidimensional Scaling Supplemental Material. https://doi.org/10.18419/darus-3104 This work is licensed under a Creative Commons “Attribution 4.0 International” license. Unless otherwise noted, figures are also licensed under CC BY 4.0. To describe the limit process more precisely, the covariance matrices ΣPk = UPkSPkUPk T are approximated via ΣPk ∗ = UPkSPk ∗ UPk T, where SPk ∗ = diag(sPk ∗1,...,sPk ∗N) with sPk ∗i ↓ sPk i = 0 in the degenerate case (limit from above) and sPk ∗i = sPk i in the non-degenerate case (constant sequence). Therefore, it can be observed that the limit process is only necessary for the degenerate case and this definition of a sequence results in a so-called Dirac sequence. The next step is to perform a change of variables with the transformations Ψk : RN → RN, Ψk(v) = UPkSPk ∗ 1/2v+µPk. In fact, the image of Ψk is Ψk(RN) = RN, the derivative satisfies DΨk(v) = UPkSPk ∗ 1/2, and we know that |det(DΨk(v))| = |det(UPkSPk ∗ 1/2)| = det(SPk ∗ 1/2) = q det(ΣPk ∗ ) and, thus, the stress ˜S can be computed in the following way (to get rid of the limit process) = ∑ i,j lim Σ Pj ∗ →ΣPj Z Ψi(RN) lim ΣPi∗ →ΣPi Z Ψ j(RN) e− 1 2 (v−µPi)TΣPi∗ −1(v−µPi) q (2π)N ·det(ΣPi∗ ) e− 1 2 (w−µPj )TΣ Pj ∗ −1 (w−µPj ) q (2π)N ·det(ΣPj ∗ ) ·  ∥v−w∥2 2 − Φi(v)−Φj(w) 2 2 2 dv dw = ∑ i,j lim Σ Pj ∗ →ΣPj Z RN lim ΣPi∗ →ΣPi Z RN e− 1 2 vTv p (2π)N e− 1 2 wTw p (2π)N · UPiSPi∗ 1/2v+ µPi −UPjSPj ∗ 1/2w− µPj 2 2 − Φi(UPiSPi∗ 1/2v+ µPi)−Φj(UPjSPj ∗ 1/2w+ µPj) 2 2 !2 dv dw = ∑ i, j Z RN Z RN e− 1 2 vTv p (2π)N e− 1 2 wTw p (2π)N · UPiSPi1/2v+ µPi −UPjSPj 1/2w− µPj  2 2 − Φi(UPiSPi1/2v+ µPi)−Φj(UPjSPj 1/2w+ µPj)  2 2 2 dv dw, where we used that the inverse of a symmetric positive definite matrix Σ is given by its singular value decomposition via Σ−1 = US−1UT. 1.2 Basic Evaluation: Affine Projection Assumption The final formulation of the previous subsection has only one model parameter left: the local projections Φ1,...,ΦK : RN → Rn. As motivated in the main document, the normal distributions are projected via adjusted affine transformations. This aspect is captured in the following assumption. Assumption 2: The local projections Φ1,...,ΦK : RN → Rn are modeled by adjusted affine transformations Φk(v) = BkUPk T(v− µPk)+ck with variables Bk =  bk 1 ... bk N  ∈ Rn×N and ck ∈ Rn (the superscript is an index, not the exponentiation). The effect of the affine transformations onto the high-dimensional normally distributioned random vectors Pk ∼ N (µPk,ΣPk) is that the low-dimensional distribution is normally distributed as well with Xk = Φk ◦Pk ∼ N (µXk,ΣXk) = N (ck,BkSPkBkT). The stress ˜S can therefore be rearranged in the following way: =∑ i,j Z RN Z RN e− 1 2 vTv p (2π)N e− 1 2 wTw p (2π)N · UPiSPi1/2v+ µPi −UPjSPj 1/2w− µPj  2 2 − BiSPi1/2v+ci −BjSPj 1/2w−cj 2 2 2 dv dw =∑ i, j Z RN Z RN e− 1 2 vTv p (2π)N e− 1 2 wTw p (2π)N ·  h UPiSPi1/2v−UPjSPj 1/2w i + h µPi − µPj i 2 2 −  h BiSPi1/2v−BjSPj 1/2w i + h ci −cji 2 2 2 dv dw =∑ i,j Z RN Z RN e− 1 2 vTv p (2π)N e− 1 2 wTw p (2π)N · UPiSPi1/2v−UPjSPj 1/2w  2 2 + D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E + µPi − µPj  2 2 − BiSPi1/2v−B jSPj 1/2w  2 2 − D BiSPi1/2v−BjSPj 1/2w,ci −c jE − ci −cj 2 2 !2 dv dw =∑ i,j Z RN Z RN e− 1 2 vTv p (2π)N e− 1 2 wTw p (2π)N · UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−BjSPj 1/2w  2 2  + hD UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−BjSPj 1/2w,ci −cjEi + µPi − µPj  2 2 − ci −cj 2 2 !2 dv dw =∑ i, j Z RN Z RN e− 1 2 vTv p (2π)N e− 1 2 wTw p (2π)N · UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−BjSPj 1/2w  2 2 2 + D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−BjSPj 1/2w,ci −cjE2 + µPi − µPj  2 2 − ci −cj 2 2 2 + 2· UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−B jSPj 1/2w  2 2 D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−BjSPj 1/2w,ci −cjE + 2· UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−B jSPj 1/2w  2 2 µPi − µPj  2 2 − ci −cj 2 2  + 2· D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−BjSPj 1/2w,ci −cjEµPi − µPj  2 2 − ci −cj 2 2 ! dv dw 2 The formulation emphasizes the connection of high-dimensional objects and low-dimensional objects. In fact, the integrand consists of six different terms that describe the difference between meanand covariance-related properties. The isolation of these terms is crucial to obtain our final formulation. It is derived in the next subsection. 1.3 Basic Evaluation: Resulting Stress Terms Using the final formulation of the previous subsection, we can split the double integral into the six different terms due to the linearity of the integral. In this way, we can evaluate these terms separately. The evaluation of the terms, which we denote as stress terms, is done in the next section. The stress terms (T1)–(T6) are stated in the following (where the sum ∑i, j over all elements i and j is neglected for the evaluation): (T1) 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw · UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−BjSPj 1/2w  2 2 2 dv dw (T2) 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw · D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−BjSPj 1/2w,ci −cjE2 dv dw (T3) 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw · µPi − µPj  2 2 − ci −cj 2 2 2 dv dw (T4) 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw ·2· UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−BjSPj 1/2w  2 2  D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−B jSPj 1/2w,ci −cjE2  dv dw (T5) 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw ·2· UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−BjSPj 1/2w  2 2  µPi − µPj  2 2 − ci −cj 2 2  dv dw (T6) 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw ·2· D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−B jSPj 1/2w,ci −cjE µPi − µPj  2 2 − ci −cj 2 2  dv dw 2 NORMAL DISTRIBUTION MODEL: EVALUATION OF STRESS TERMS In the previous section, we derived the six stress terms (T1)–(T6) as part of the pairwise sum. This section evaluates these terms via the following two frequently used identities: Z ∞ −∞ e− 1 2 ·(x2+q)(ax2 +bx+c)2 dx = √ 2π ·e− 1 2 ·q ·(3a2 +b2 +2ac+c2), (3) Z ∞ −∞ e− 1 2 ·(x2+q)(ax3 +bx2 +cx+d) dx = √ 2π ·e− 1 2 ·q ·(b+d). (4) Both identities can be easily proved. The evaluation of each stress term is performed in the following subsections. 2.1 Stress Term Evaluation: (T1) To evaluate the stress term (T1), we first rearrange the integrand in a way that the double integral can be solved via the Fubini-Tonelli’s theorem, i.e., our goal is to integrate along the canonical axes v1,v2,...,vN and w1,w2,...,wN one after the other (we use δkl for the Kronecker delta): UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−BjSPj 1/2w  2 2 2 (5) =  vTSPiv+wTSPjw−2vTSPi1/2UPiTUPjSPj 1/2w−   vTSPi1/2BiTBiSPi1/2v+wTSPj 1/2B jTBjSPj 1/2w−2vTSPi1/2BiTBjSPj 1/2w 2 = N ∑ k=1 sPi k v2 k + N ∑ k=1 sPj k w2 k −2 N ∑ k=1 N ∑ l=1 (sPi k sPj l )1/2uPi k TuPj l vkwl − N ∑ k=1 N ∑ l=1 (sPi k sPi l )1/2bi k Tbi lvkvl − N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2bj k Tbj l wkwl +2 N ∑ k=1 N ∑ l=1 (sPi k sPj l )1/2bi k Tbj l vkwl !2 = N ∑ k=1 N ∑ l=1 (sPi k sPi l )1/2δklvkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2δklwkwl −2 N ∑ k=1 N ∑ l=1 (sPi k sPj l )1/2uPi k TuPj l vkwl 3 − N ∑ k=1 N ∑ l=1 (sPi k sPi l )1/2bi k Tbi lvkvl − N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2bj k Tbj l wkwl +2 N ∑ k=1 N ∑ l=1 (sPi k sPj l )1/2bi k Tbj l vkwl !2 = N ∑ k=1 N ∑ l=1 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl −2 N ∑ k=1 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl !2 =  sPi 1 (1−bi 1 Tbi 1)v2 1 + N ∑ l=2 (sPi 1 sPi l )1/2(−bi 1 Tbi l)v1vl + N ∑ k=2 (sPi k sPi 1 )1/2(−bi k Tbi 1)vkv1 −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tbj l )v1wl + N ∑ k=2 N ∑ l=2 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl −2 N ∑ k=2 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl !2 =  sPi 1 (1−bi 1 Tbi 1)v2 1 +2 N ∑ l=2 (sPi 1 sPi l )1/2(−bi 1 Tbi l)vlv1 −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tbj l )wlv1 + N ∑ k=2 N ∑ l=2 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tb j l )wkwl −2 N ∑ k=2 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl !2 This formulation emphasizes the direction v1. In the following, we will integrate along this axis while using the first identity (Equation 3): 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw · UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−B jSPj 1/2w  2 2 2 dv dw (6) = 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 (v2 1+∑N k=2 v2 k+∑N l=1 w2 l ) ·  sPi 1 (1−bi 1 Tbi 1)v2 1 +2 N ∑ l=2 (sPi 1 sPi l )1/2(−bi 1 Tbi l)vlv1 −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tbj l )wlv1 + N ∑ k=2 N ∑ l=2 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl −2 N ∑ k=2 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl !2 dv1 ·dv2 ···dvN dw = 1 p (2π)N 1 p (2π)N−1 Z RN Z RN−1 e− 1 2 (∑N k=2 v2 k+∑N l=1 w2 l ) ·  3   sPi 1 (1−bi 1 Tbi 1) 2 +  2 N ∑ l=2 (sPi 1 sPi l )1/2(−bi 1 Tbi l)vl −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tb j l )wl 2 + 2   sPi 1 (1−bi 1 Tbi 1)  N ∑ k=2 N ∑ l=2 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl −2 N ∑ k=2 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl  +  N ∑ k=2 N ∑ l=2 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl −2 N ∑ k=2 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl 2 ! dv2 ···dvN dw We see that the integrand now consists of four different terms (not counting the exponential function), where the last term is similar to the previous integrand (except for the components that belong to v1). Therefore, the evaluation can be done by recursion (mathematical induction). Before we do this, we evaluate the other three terms: the first term can be easily solved via 1 p (2π)N 1 p (2π)N−1 Z RN Z RN−1 e− 1 2 (∑N k=2 v2 k+∑N l=1 w2 l ) ·3   sPi 1 (1−bi 1 Tbi 1) 2 dv2 ···dvN ·dw = 3   sPi 1 (1−bi 1 Tbi 1) 2, (7) the second term can be solved with the help of the first identity (Equation 3) and recursion via 1 p (2π)N 1 p (2π)N−1 Z RN Z RN−1 e− 1 2 (∑N k=2 v2 k+∑N l=1 w2 l ) ·  2 N ∑ l=2 (sPi 1 sPi l )1/2(−bi 1 Tbi l)vl −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tb j l )wl 2 dv2 ···dvN ·dw (8) = 1 p (2π)N 1 p (2π)N−2 Z Rn Z RN−2 e− 1 2 (∑n k=3 v2 k+∑N l=1 w2 l ) ·  2(sPi 1 sPi 2 )1/2(−bi 1 Tbi 2) 2 +  2 N ∑ l=3 (sPi 1 sPi l )1/2(−bi 1 Tbi l)vl −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tb j l )wl 2 ! dv3 ···dvn ·dw =  2(sPi 1 sPi 2 )1/2(−bi 1 Tbi 2) 2 + 1 p (2π)N 1 p (2π)N−2 Z RN Z RN−2 e− 1 2 (∑N k=3 v2 k+∑N l=1 w2 l ) ·  2 N ∑ l=3 (sPi 1 sPi l )1/2(−bi 1 Tbi l)vl −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tb j l )wl 2 dv3 ···dvn ·dw = ... =  2(sPi 1 sPi 2 )1/2(−bi 1 Tbi 2) 2 +···+  2(sPi 1 sPi N)1/2(−bi 1 Tbi N) 2 + 1 p (2π)N Z RN e− 1 2 (∑N l=1 w2 l ) ·  −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tb j l )wl 2 dw = 4· N ∑ l=2  (sPi 1 sPi l )1/2(−bi 1 Tbi l) 2 +4· N ∑ l=1  (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tbj l ) 2 , 4 and the third term can be solved with the help of the second identity (Equation 4) via 1 p (2π)N 1 p (2π)N−1 Z RN Z RN−1 e− 1 2 (∑N k=2 v2 k+∑N l=1 w2 l ) ·2  sPi 1 (1−bi 1 Tbi 1)  (9)  N ∑ k=2 N ∑ l=2 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl −2 N ∑ k=2 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl  dv2 ···dvn ·dw = 2  sPi 1 (1−bi 1 Tbi 1)  N ∑ k=2 sPi k (1−bi k Tbi k)+ N ∑ k=1 sPj k (1−bj k Tbj k)  . Now, we can evaluate the first stress term (T1) further by inserting Equations 7, 8, and 9 into Equation 6 and by solving the remaining integrals along the directions v2,...,vN inductively (we highlight the recursive representation once again). This leads to the following partial result: 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw · UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−B jSPj 1/2w  2 2 2 dv dw (10) = 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 (∑N k=1 v2 k+∑N l=1 w2 l ) ·  N ∑ k=1 N ∑ l=1 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl −2 N ∑ k=1 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl 2 dv dw = 3   sPi 1 (1−bi 1 Tbi 1) 2 +4· N ∑ l=2  (sPi 1 sPi l )1/2(−bi 1 Tbi l) 2 +4· N ∑ l=1  (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tbj l ) 2 + 2  sPi 1 (1−bi 1 Tbi 1)  N ∑ k=2 sPi k (1−bi k Tbi k)+ N ∑ k=1 sPj k (1−bj k Tbj k)  + 1 p (2π)N 1 p (2π)N−1 Z RN Z RN−1 e− 1 2 (∑N k=2 v2 k+∑N l=1 w2 l ) ·  N ∑ k=2 N ∑ l=2 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl −2 N ∑ k=2 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl 2 dv2 ···dvN dw = ... = 3 N ∑ k=1   sPi k (1−bi k Tbi k) 2 +4 N ∑ k=1 N ∑ l=k+1  (sPi k sPi l )1/2(−bi k Tbi l) 2 +4 N ∑ k=1 N ∑ l=1  (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l ) 2 + 2 N ∑ k=1  sPi k (1−bi k Tbi k)  N ∑ l=k+1 sPi l (1−bi l Tbi l)+ N ∑ l=1 sPj l (1−bj l Tbj l )  + 1 p (2π)N Z RN e− 1 2 ∑N l=1 w2 l ·  N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl 2 dw To evaluate the remaining integral along the directions w1,...,vN, we can use the same approach. In fact, since this integral is even simpler than the previous one, it can be solved analogously (integrate along w1, see Equation 5, and then along w2,...,wN, see Equation 10): 1 p (2π)N Z RN e− 1 2 ∑N l=1 w2 l ·  N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tb j l )wkwl 2 dw (11) = 3 N ∑ k=1   sPj k (1−bj k Tb j k) 2 +4 N ∑ k=1 N ∑ l=k+1  (sPj k sPj l )1/2(−bj k Tbj l ) 2 +2 N ∑ k=1  sPj k (1−bj k Tbj k)  N ∑ l=k+1 sPj l (1−bj l Tbj l )  In sum, the final result for the first stress term (T1) is obtained by inserting Equation 11 into Equation 10: 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw · UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−BjSPj 1/2w  2 2 2 dv dw = 3 N ∑ k=1   sPi k (1−bi k Tbi k) 2 +4 N ∑ k=1 N ∑ l=k+1  (sPi k sPi l )1/2(−bi k Tbi l) 2 +3 N ∑ k=1   sPj k (1−bj k Tbj k) 2 +4 N ∑ k=1 N ∑ l=k+1  (sPj k sPj l )1/2(−bj k Tbj l ) 2 + 4 N ∑ k=1 N ∑ l=1  (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l ) 2 +2 N ∑ k=1  sPi k (1−bi k Tbi k)  N ∑ l=k+1 sPi l (1−bi l Tbi l)+ N ∑ l=1 sPj l (1−bj l Tb j l )  + 2 N ∑ k=1  sPj k (1−b j k Tbj k)  N ∑ l=k+1 sPj l (1−b j l Tbj l )  = N ∑ k=1  sPi k (1−bi k Tbi k) 2 +2 N ∑ k=1  sPi k (1−bi k Tbi k) 2 +4 N ∑ k=1 N ∑ l=k+1  (sPi k sPi l )1/2(−bi k Tbi l) 2 + N ∑ k=1  sPj k (1−bj k Tbj k) 2 +2 N ∑ k=1  sPj k (1−bj k Tbj k) 2 +4 N ∑ k=1 N ∑ l=k+1  (sPj k sPj l )1/2(−bj k Tbj l ) 2 5 + 4 N ∑ k=1 N ∑ l=1  (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l ) 2 +2 N ∑ k=1 N ∑ l=1  sPi k (1−bi k Tbi k)  sPj l (1−bj l Tbj l )  + 2 N ∑ k=1 N ∑ l=k+1  sPi k (1−bi k Tbi k)  sPi l (1−bi l Tbi l)  +2 N ∑ k=1 N ∑ l=k+1  sPj k (1−bj k Tbj k)  sPj l (1−bj l Tb j l )  = N ∑ k=1  sPi k (1−bi k Tbi k) 2 +2 N ∑ k=1  sPi k (1−bi k Tbi k) 2 +2 N ∑ k=1 N ∑ l=k+1  (sPi k sPi l )1/2(−bi k Tbi l) 2 +2 N ∑ k=1 k−1 ∑ l=1  (sPi k sPi l )1/2(−bi k Tbi l) 2 + N ∑ k=1  sPj k (1−bj k Tbj k) 2 +2 N ∑ k=1  sPj k (1−bj k Tbj k) 2 +2 N ∑ k=1 N ∑ l=k+1  (sPj k sPj l )1/2(−bj k Tbj l ) 2 +2 N ∑ k=1 k−1 ∑ l=1  (sPj k sPj l )1/2(−bj k Tbj l ) 2 + 4 N ∑ k=1 N ∑ l=1  (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l ) 2 +2 N ∑ k=1 N ∑ l=1  sPi k (1−bi k Tbi k)  sPj l (1−bj l Tb j l )  + N ∑ k=1 N ∑ l=k+1  sPi k (1−bi k Tbi k)  sPi l (1−bi l Tbi l)  + N ∑ k=1 k−1 ∑ l=1  sPi k (1−bi k Tbi k)  sPi l (1−bi l Tbi l)  + N ∑ k=1 N ∑ l=k+1  sPj k (1−bj k Tbj k)  sPj l (1−bj l Tb j l )  + N ∑ k=1 k−1 ∑ l=1  sPj k (1−b j k Tbj k)  sPj l (1−bj l Tb j l )  = 2 N ∑ k=1 N ∑ l=1  (sPi k sPi l )1/2(δkl −bi k Tbi l) 2 +2 N ∑ k=1 N ∑ l=1  (sPj k sPj l )1/2(δkl −bj k Tbj l ) 2 +4 N ∑ k=1 N ∑ l=1  (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l ) 2 + 2 N ∑ k=1 N ∑ l=1  sPi k (1−bi k Tbi k)  sPj l (1−bj l Tbj l )  + N ∑ k=1 N ∑ l=1  sPi k (1−bi k Tbi k)  sPi l (1−bi l Tbi l)  + N ∑ k=1 N ∑ l=1  sPj k (1−b j k Tbj k)  sPj l (1−bj l Tbj l )  = 2 N ∑ k=1 N ∑ l=1 sPi k sPi l  δkl −bi k Tbi l 2 +2 N ∑ k=1 N ∑ l=1 sPj k sPj l  δkl −bj k Tbj l 2 +4 N ∑ k=1 N ∑ l=1 sPi k sPj l  uPi k TuPj l −bi k Tbj l 2 + N ∑ k=1  sPi k (1−bi k Tbi k)  + N ∑ l=1  sPj l (1−bj l Tbj l ) !2 2.2 Stress Term Evaluation: (T2) To evaluate the second stress term (T2), we use the same strategy as for the first stress term (T1) in the previous subsection. This means that the integrand is rearranged with respect to the direction v1 and (T2) is integrated into this direction: D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−BjSPj 1/2w,ci −cjE2 (12) = * N ∑ k=1 q sPi k vkuPi k − q sPj k wkuPj k ,µPi − µPj + − * N ∑ k=1 q sPi k vkbi k − q sPj k wkbj k,ci −cj +!2 = N ∑ k=1 N ∑ l=1  q sPi k vkuPi k,l − q sPj k wkuPj k,l  ·(µPi l − µPj l )− N ∑ k=1 n ∑ l=1  q sPi k vkbi k,l − q sPj k wkbj k,l  ·(ci l −cj l ) !2 = N ∑ k=1 N ∑ l=1 q sPi k vkuPi k,l(µPi l − µPj l )− N ∑ k=1 N ∑ l=1 q sPj k wkuPj k,l(µPi l − µPj l )− N ∑ k=1 n ∑ l=1 q sPi k vkbi k,l(ci l −cj l )+ N ∑ k=1 n ∑ l=1 q sPj k wkbj k,l(ci l −c j l ) !2 = N ∑ l=1 q sPi 1 v1uPi 1,l(µPi l − µPj l )− n ∑ l=1 q sPi 1 v1bi 1,l(ci l −cj l ) + N ∑ k=2 N ∑ l=1 q sPi k vkuPi k,l(µPi l − µPj l )− N ∑ k=1 N ∑ l=1 q sPj k wkuPj k,l(µPi l − µPj l )− N ∑ k=2 n ∑ l=1 q sPi k vkbi k,l(ci l −cj l )+ N ∑ k=1 n ∑ l=1 q sPj k wkb j k,l(ci l −cj l ) !2 Now, we insert Equation 12 into the stress term (T2) and integrate along the direction v1 using the first identity (Equation 3): 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw · D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−B jSPj 1/2w,ci −cjE2 dv dw = 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 (v2 1+∑N k=2 v2 k+∑N l=1 w2 l ) · N ∑ l=1 q sPi 1 v1uPi 1,l(µPi l − µPj l )− n ∑ l=1 q sPi 1 v1bi 1,l(ci l −c j l ) 6 + N ∑ k=2 N ∑ l=1 q sPi k vkuPi k,l(µPi l − µPj l )− N ∑ k=1 N ∑ l=1 q sPj k wkuPj k,l(µPi l − µPj l )− N ∑ k=2 n ∑ l=1 q sPi k vkbi k,l(ci l −cj l )+ N ∑ k=1 n ∑ l=1 q sPj k wkbj k,l(ci l −cj l ) !2 = 1 p (2π)N 1 p (2π)N−1 Z RN Z RN−1 e− 1 2 (∑N k=2 v2 k+∑N l=1 w2 l ) ·  N ∑ l=1 q sPi 1 uPi 1,l(µPi l − µPj l )− n ∑ l=1 q sPi 1 bi 1,l(ci l −cj l ) 2 +  N ∑ k=2 N ∑ l=1 q sPi k vkuPi k,l(µPi l − µPj l )− N ∑ k=1 N ∑ l=1 q sPj k wkuPj k,l(µPi l − µPj l )− N ∑ k=2 n ∑ l=1 q sPi k vkbi k,l(ci l −cj l )+ N ∑ k=1 n ∑ l=1 q sPj k wkbj k,l(ci l −cj l ) 2 ! =  N ∑ l=1 q sPi 1 uPi 1,l(µPi l − µPj l )− n ∑ l=1 q sPi 1 bi 1,l(ci l −cj l ) 2 + 1 p (2π)N 1 p (2π)N−1 Z RN Z RN−1 e− 1 2 (∑N k=2 v2 k+∑N l=1 w2 l ) ·  N ∑ k=2 N ∑ l=1 q sPi k vkuPi k,l(µPi l − µPj l )− N ∑ k=1 N ∑ l=1 q sPj k wkuPj k,l(µPi l − µPj l )− N ∑ k=2 n ∑ l=1 q sPi k vkbi k,l(ci l −cj l )+ N ∑ k=1 n ∑ l=1 q sPj k wkbj k,l(ci l −cj l ) !2 . Again, we observe a recursive pattern. Therefore, we can solve the stress term (T2) inductively, which leads to the following final result: 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw · D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−B jSPj 1/2w,ci −cjE2 dv dw = N ∑ k=1  N ∑ l=1 q sPi k uPi k,l(µPi l − µPj l )− n ∑ l=1 q sPi k bi k,l(ci l −cj l ) 2 + N ∑ k=1  N ∑ l=1 q sPj k uPj k,l(µPi l − µPj l )− n ∑ l=1 q sPj k b j k,l(ci l −cj l ) 2 = N ∑ k=1 q sPi k uPi k ,µPi − µPj  − q sPi k bi k,ci −cj 2 + N ∑ k=1 q sPj k uPj k ,µPi − µPj  − q sPj k bj k,ci −cj 2 = N ∑ k=1 sPi k D uPi k ,µPi − µPj E − D bi k,ci −cjE2 + N ∑ k=1 sPj k D uPj k ,µPi − µPj E − D bj k,ci −cjE2 2.3 Stress Term Evaluation: (T3) The third stress term (T3) can be easily solved due to the linearity of the integral, leading to the following result: 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw · µPi − µPj  2 2 − ci −cj 2 2 2 dv dw = µPi − µPj  2 2 − ci −cj 2 2 2 2.4 Stress Term Evaluation: (T4) To evaluate the fourth stress term (T4), we use partial results of the stress terms (T1) and (T2) as (T4) is a combination of these. Again, for the evaluation the same strategy is applied, i.e., we emphasize the direction v1 by using Equation 5 and Equation 12 and integrate into this direction: 2 UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−B jSPj 1/2w  2 2 D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−BjSPj 1/2w,ci −cjE = 2 N ∑ k=1 N ∑ l=1 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tb j l )wkwl −2 N ∑ k=1 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl ! · N ∑ k=1 N ∑ l=1 q sPi k vkuPi k,l ·(µPi l − µPj l )− N ∑ k=1 N ∑ l=1 q sPj k wkuPj k,l ·(µPi l − µPj l )− N ∑ k=1 n ∑ l=1 q sPi k vkbi k,l ·(ci l −cj l )+ N ∑ k=1 n ∑ l=1 q sPj k wkb j k,l ·(ci l −cj l ) ! = 2 h sPi 1 (1−bi 1 Tbi 1) i v2 1 + h 2· N ∑ l=2 (sPi 1 sPi l )1/2(−bi 1 Tbi l)vl −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tbj l )wl i v1 + N ∑ k=2 N ∑ l=2 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tb j l )wkwl −2 N ∑ k=2 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl ! · h N ∑ l=1 q sPi 1 uPi 1,l(µPi l − µPj l )+ n ∑ l=1 q sPi 1 bi 1,l(ci l −cj l ) i v1 + N ∑ k=2 N ∑ l=1 q sPi k vkuPi k,l(µPi l − µPj l )− N ∑ k=1 N ∑ l=1 q sPj k wkuPj k,l(µPi l − µPj l )− N ∑ k=2 n ∑ l=1 q sPi k vkbi k,l(ci l −cj l )+ N ∑ k=1 n ∑ l=1 q sPj k wkb j k,l(ci l −cj l ) ! Before we integrate, we consider the following: since the first bracket has a quadratic structure “av2 1 + bv1 + c” and the second one a linear structure “av1 + b”, the multiplication leads to a cubic structure “av3 1 + bv2 1 + cv1 + d”. According to the second identity (Equation 4), the integration along v1 will eliminate the terms with an odd exponent (i.e., “av3 1” and “bv1” will vanish). With this consideration, we obtain 7 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw ·2· UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−B jSPj 1/2w  2 2  · D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−B jSPj 1/2w,ci −cjE2  dv1 ···dvN ·dw = 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 (v2 1+∑N k=2 v2 k+∑N l=1 w2 l ) ·2· h sPi 1 (1−bi 1 Tbi 1) i v2 1 + h 2· N ∑ l=2 (sPi 1 sPi l )1/2(−bi 1 Tbi l)vl −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tbj l )wl i v1 + N ∑ k=2 N ∑ l=2 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl −2 N ∑ k=2 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl ! · h N ∑ l=1 q sPi 1 uPi 1,l(µPi l − µPj l )+ n ∑ l=1 q sPi 1 bi 1,l(ci l −cj l ) i v1 + N ∑ k=2 N ∑ l=1 q sPi k vkuPi k,l(µPi l − µPj l )− N ∑ k=1 N ∑ l=1 q sPj k wkuPj k,l(µPi l − µPj l )− N ∑ k=2 n ∑ l=1 q sPi k vkbi k,l(ci l −cj l )+ N ∑ k=1 n ∑ l=1 q sPj k wkbj k,l(ci l −cj l ) ! dv1 ···dvN ·dw = 1 ( √ 2π)N 1 ( √ 2π)N−1 Z RN Z RN−1 e− 1 2 (∑N k=2 v2 k+∑N l=1 w2 l ) ·2·  h sPi 1 (1−bi 1 Tbi 1) i · h N ∑ k=2 N ∑ l=1 q sPi k vkuPi k,l(µPi l − µPj l )− N ∑ k=1 N ∑ l=1 q sPj k wkuPj k,l(µPi l − µPj l )− N ∑ k=2 n ∑ l=1 q sPi k vkbi k,l(ci l −cj l )+ N ∑ k=1 n ∑ l=1 q sPj k wkb j k,l(ci l −cj l ) i + h 2· N ∑ l=2 (sPi 1 sPi l )1/2(−bi 1 Tbi l)vl −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tbj l )wl i · h N ∑ l=1 q sPi 1 uPi 1,l(µPi l − µPj l )+ n ∑ l=1 q sPi 1 bi 1,l(ci l −cj l ) i + h N ∑ k=2 N ∑ l=2 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl −2 N ∑ k=2 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl i · h N ∑ k=2 N ∑ l=1 q sPi k vkuPi k,l(µPi l − µPj l )− N ∑ k=1 N ∑ l=1 q sPj k wkuPj k,l(µPi l − µPj l )− N ∑ k=2 n ∑ l=1 q sPi k vkbi k,l(ci l −cj l )+ N ∑ k=1 n ∑ l=1 q sPj k wkbj k,l(ci l −cj l ) i! dv2 ···dvN ·dw We see that the integrand consists of three terms (not counting the exponential function). The last term belongs to the recursive representation, i.e., the integral can be solved inductively. Before we do this, we evaluate the other two terms: Both terms can be solved by using Equation 4 via 1 ( √ 2π)N 1 ( √ 2π)N−1 Z RN Z RN−1 e− 1 2 (∑N k=2 v2 k+∑N l=1 w2 l ) ·2· h sPi 1 (1−bi 1 Tbi 1) i · h N ∑ k=2 N ∑ l=1 q sPi k vkuPi k,l(µPi l − µPj l )− N ∑ k=1 N ∑ l=1 q sPj k wkuPj k,l(µPi l − µPj l )− N ∑ k=2 n ∑ l=1 q sPi k vkbi k,l(ci l −cj l )+ N ∑ k=1 n ∑ l=1 q sPj k wkbj k,l(ci l −cj l ) i dv2 ···dvN ·dw = 0, 1 ( √ 2π)N 1 ( √ 2π)N−1 Z RN Z RN−1 e− 1 2 (∑N k=2 v2 k+∑N l=1 w2 l ) ·2· h 2· N ∑ l=2 (sPi 1 sPi l )1/2(−bi 1 Tbi l)vl −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tb j l )wl i · h N ∑ l=1 q sPi 1 uPi 1,l(µPi l − µPj l )+ n ∑ l=1 q sPi 1 bi 1,l(ci l −cj l ) i dv2 ···dvN ·dw = 2· h N ∑ l=1 q sPi 1 uPi 1,l(µPi l − µPj l )+ n ∑ l=1 q sPi 1 bi 1,l(ci l −cj l ) i · 1 ( √ 2π)N 1 ( √ 2π)N−1 Z RN Z RN−1 e− 1 2 (∑N k=2 v2 k+∑N l=1 w2 l )· h 2· N ∑ l=2 (sPi 1 sPi l )1/2(−bi 1 Tbi l)vl −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tb j l )wl i dv2 ···dvN ·dw = 0. We observe that both terms are zero. Therefore, solving the fourth stress term (T4) inductively leads to the following final result: 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw ·2· UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−B jSPj 1/2w  2 2  · D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−B jSPj 1/2w,ci −cjE2  dv dw = 0 8 2.5 Stress Term Evaluation: (T5) To evaluate the fifth stress term (T5), we use a partial result (Equation 5) of the stress term (T1) to obtain a representation that emphasizes v1: UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−B jSPj 1/2w  2 2  (13) = N ∑ k=1 N ∑ l=1 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl −2 N ∑ k=1 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl = sPi 1 (1−bi 1 Tbi 1)v2 1 +2 N ∑ l=2 (sPi 1 sPi l )1/2(−bi 1 Tbi l)v1vl −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tb j l )v1wl + N ∑ k=2 N ∑ l=2 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl −2 N ∑ k=2 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl Now, we insert Equation 13 into the stress term (T5) and integrate along the direction v1 (and the others) using the second identity (Equation 4): 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw ·2· UPiSPi1/2v−UPjSPj 1/2w  2 2 − BiSPi1/2v−BjSPj 1/2w  2 2 µPi − µPj  2 2 − ci −cj 2 2  dv dw = 2 µPi − µPj  2 2 − ci −cj 2 2  1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 (v2 1+∑N k=2 v2 k+∑N l=1 w2 l ) ·  sPi 1 (1−bi 1 Tbi 1)v2 1 +2 N ∑ l=2 (sPi 1 sPi l )1/2(−bi 1 Tbi l)v1vl −2 N ∑ l=1 (sPi 1 sPj l )1/2(uPi 1 TuPj l −bi 1 Tbj l )v1wl + N ∑ k=2 N ∑ l=2 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tb j l )wkwl −2 N ∑ k=2 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl ! dv1 ···dvN ·dw = 2 µPi − µPj  2 2 − ci −cj 2 2  1 p (2π)N 1 p (2π)N−1 Z RN Z RN−1 e− 1 2 (∑N k=2 v2 k+∑N l=1 w2 l ) ·  sPi 1 (1−bi 1 Tbi 1) + N ∑ k=2 N ∑ l=2 (sPi k sPi l )1/2(δkl −bi k Tbi l)vkvl + N ∑ k=1 N ∑ l=1 (sPj k sPj l )1/2(δkl −bj k Tbj l )wkwl −2 N ∑ k=2 N ∑ l=1 (sPi k sPj l )1/2(uPi k TuPj l −bi k Tbj l )vkwl ! dv2 ···dvN ·dw = ... = 2 µPi − µPj  2 2 − ci −cj 2 2  N ∑ k=1 sPi k (1−bi k Tbi k)+ N ∑ l=1 sPj l (1−bj l Tbj l )  2.6 Stress Term Evaluation: (T6) To evaluate the stress term (T6), we use the partial result Equation 12 of the second stress term (T2) as well as the second identity (Equation 4): 1 p (2π)N 1 p (2π)N Z RN Z RN e− 1 2 vTve− 1 2 wTw ·2· D UPiSPi1/2v−UPjSPj 1/2w,µPi − µPj E − D BiSPi1/2v−B jSPj 1/2w,ci −cjE µPi − µPj  2 2 − ci −cj 2 2  dv dw = 1 p (2π)N 1 p (2π)N µPi − µPj  2 2 − ci −cj 2 2  ·2· Z RN Z RN e− 1 2 (∑N k=1 v2 k+∑N l=1 w2 l ) ·  N ∑ k=1 N ∑ l=1 q sPi k vkuPi k,l(µPi l − µPj l )− N ∑ k=1 N ∑ l=1 q sPj k wkuPj k,l(µPi l − µPj l )− N ∑ k=1 n ∑ l=1 q sPi k vkbi k,l(ci l −cj l )+ N ∑ k=1 n ∑ l=1 q sPj k wkb j k,l(ci l −cj l ) ! dv dw = 0. 3 NORMAL DISTRIBUTION MODEL: COMPOSITION OF STRESS After evaluating the stress terms (T1)–(T6) in the previous section, we can formulate the final stress. In general, the stress ˜S is a function that depends on the local projections Φ1,...,ΦK (see Equation 1). Since the projections are characterized by the components c = (c1,...,cK) and B = (B1,...,BK), we can define the stress equivalently as a function of these. The resulting stress S : RN ×···×RN ×RN×N ×···×RN×N → R≥0 can be formulated in two different ways: a notation that is based on the evaluations in the previous sections (scalar notation) or a notation that highlights the matrices and vectors (matrix notation). Both formulations are presented in the following subsections. 3.1 Stress Formulation: Scalar Notation To compose the stress S, we merge the stress terms (T1)–(T6) into the following formulation: 9 S(c1,...,cK,B1,...,BK) (14) =∑ i,j " 2 N ∑ k=1 N ∑ l=1 sPi k sPi l  δkl −bi k Tbi l 2 +2 N ∑ k=1 N ∑ l=1 (sPj k sPj l  δkl −bj k Tbj l 2 +4 N ∑ k=1 N ∑ l=1 sPi k sPj l  uPi k TuPj l −bi k Tbj l 2 + N ∑ k=1  sPi k (1−bi k Tbi k)  + N ∑ l=1  sPj l (1−b j l Tbj l ) !2 + N ∑ k=1 sPi k D uPi k ,µPi − µPj E − D bi k,ci −c jE2 + N ∑ k=1 sPj k D uPj k ,µPi − µPj E − D bj k,ci −cjE2 + µPi − µPj  2 2 − ci −cj 2 2 2 +2 µPi − µPj  2 2 − ci −cj 2 2  N ∑ k=1 sPi k (1−bi k Tbi k)+ N ∑ l=1 sPj l (1−b j l Tbj l ) # =∑ i, j " 2 N ∑ k=1 N ∑ l=1 sPi k sPi l  δkl −bi k Tbi l 2 +2 N ∑ k=1 N ∑ l=1 (sPj k sPj l  δkl −bj k Tbj l 2 +4 N ∑ k=1 N ∑ l=1 sPi k sPj l  uPi k TuPj l −bi k Tb j l 2 + N ∑ k=1 sPi k D uPi k ,µPi − µPj E − D bi k,ci −cjE2 + N ∑ k=1 sPj k D uPj k ,µPi − µPj E − D b j k,ci −c jE2 + µPi − µPj  2 2 − ci −cj 2 2  + N ∑ k=1  sPi k (1−bi k Tbi k)  + N ∑ l=1  sPj l (1−bj l Tbj l ) !2# We observe that the resulting stress S consists of three different components, which we will denote as stress components. An interpretation of these is provided in the main document. Since the stress components mainly highlight scalar operations, our next step is to provide a matrix notation that has numerical and algorithmic advantages. 3.2 Stress Formulation: Matrix Notation To obtain a matrix notation of our derived stress S, we have to rearrange the three stress components. For the first stress component, the matrix notation is given by 2 N ∑ k=1 N ∑ l=1 sPi k sPi l  δkl −bi k Tbi l 2 +2 N ∑ k=1 N ∑ l=1 (sPj k sPj l  δkl −b j k Tbj l 2 +4 N ∑ k=1 N ∑ l=1 sPi k sPj l  uPi k TuPj l −bi k Tbj l 2 = 2· SPi −SPi1/2BiTBiSPi1/2 2 F +2· SPj −SPj 1/2B jTBjSPj 1/2 2 F +4· SPi1/2UPiTUPjSPj 1/2 −SPi1/2BiTB jSPj 1/2 2 F , and, analogously, for the second stress component N ∑ k=1 sPi k D uPi k ,µPi − µPj E − D bi k,ci −cjE2 + N ∑ k=1 sPj k D uPj k ,µPi − µPj E − D bj k,ci −cjE2 = SPi1/2UPiT(µPi − µPj)−SPi1/2BiT(ci −cj)  2 2 + SPj 1/2UPj T(µPi − µPj)−SPj 1/2B jT(ci −cj)  2 2 . The third stress component has a different matrix notation that makes use of the trace: µPi − µPj  2 2 − ci −cj 2 2  + N ∑ k=1  sPi k (1−bi k Tbi k)  + N ∑ l=1  sPj l (1−b j l Tbj l ) !2 = µPi − µPj  2 2 − ci −cj 2 2  + h trace(SPi)−trace(BiSPiBiT)+trace(SPj)−trace(B jSPjBjT) i!2 . Hence, the final formulation in matrix notation is given by S(c1,...,cK,B1,...,BK) (15) = 2· SPi −SPi1/2BiTBiSPi1/2 2 F +2· SPj −SPj 1/2B jTBjSPj 1/2 2 F +4· SPi1/2UPiTUPjSPj 1/2 −SPi1/2BiTB jSPj 1/2 2 F + SPi1/2UPiT(µPi − µPj)−SPi1/2BiT(ci −c j)  2 2 + SPj 1/2UPj T(µPi − µPj)−SPj 1/2BjT(ci −cj)  2 2 + µPi − µPj  2 2 − ci −cj 2 2  + h trace(SPi)−trace(BiSPiBiT)+trace(SPj)−trace(BjSPjB jT) i!2 . 4 NORMAL DISTRIBUTION MODEL: DERIVATIVE OF STRESS For the derivative of the stress, we use the matrix notation, which facilitates the computation. Therefore, we can differentiate with respect to the variables ck and Bk. For the sake of transparency, we split the formulation into the three stress components. For the first stress component, we obtain the derivatives via well-known Frobenius norm rules 10 ∂ ∂ck ∑ i, j  2· SPi −SPi1/2BiTBiSPi1/2 2 F +2· SPj −SPj 1/2BjTB jSPj 1/2 2 F +4· SPi1/2UPiTUPjSPj 1/2 −SPi1/2BiTBjSPj 1/2 2 F  = 0, ∂ ∂Bk ∑ i, j  2· SPi −SPi1/2BiTBiSPi1/2 2 F +2· SPj −SPj 1/2B jTBjSPj 1/2 2 F +4· SPi1/2UPiTUPjSPj 1/2 −SPi1/2BiTBjSPj 1/2 2 F  = h 8·BkSPkBkTBkSPk −8BkSPk 2i + h 8·BkSPkBkTBkSPk −8BkSPk 2i + h 16·BkSPkBkTBkSPk −16BkSPk 2i + N ∑ l̸=k h 16·BkSPkBkTBlSPl −16BlSPlUlTUkSPk i = h 16·BkSPkBkTBkSPk −16BkSPk 2i + N ∑ l=1 h 16·BkSPkBkTBlSPl −16BlSPlUlTUkSPk i . Analogously, we obtain the derivative for the second stress component as follows: ∂ ∂ck ∑ i,j SPi1/2UPiT(µPi − µPj)−SPi1/2BiT(ci −cj)  2 2 + SPj 1/2UPj T(µPi − µPj)−SPj 1/2B jT(ci −cj)  2 2  = N ∑ l̸=k −2BkSPk 1/2  UPk T(µPk − µPl)−BkT(ck −cl)  −2BlSPl 1/2  UPl T(µPl − µPk)−BlT(cl −ck)  − N ∑ l̸=k −2BlSPl 1/2  UPl T(µPl − µPk)−BlT(cl −ck)  −2BkSPk 1/2  UPk T(µPk − µPl)−BkT(ck −cl)  = 0, ∂ ∂Bk ∑ i, j SPi1/2UPiT(µPi − µPj)−SPi1/2BiT(ci −cj)  2 2 + SPj 1/2UPj T(µPi − µPj)−SPj 1/2BjT(ci −cj)  2 2  = N ∑ l̸=k h 2(ck −cl)(ck −cl)TBkSPk 1/2 −2(ck −cl)(µPk − µPl)TUPkSPk 1/2i + N ∑ l̸=k h 2(cl −ck)(cl −ck)TBkSPk 1/2 −2(cl −ck)(µPl − µPk)TUPkSPk 1/2i = N ∑ l̸=k h 4(ck −cl)(ck −cl)TBkSPk 1/2 −4(ck −cl)(µPk − µPl)TUPkSPk 1/2i . The derivative of the third stress component can be calculated as follows: ∂ ∂ck ∑ i, j µPi − µPj  2 2 − ci −cj 2 2  + h trace(SPi)−trace(BiSPiBiT)+trace(SPj)−trace(B jSPjBjT) i!2 = N ∑ l̸=k µPk − µPl  2 2 − ck −cl 2 2  + h trace(SPk)−trace(BkSPkBkT)+trace(SPl)−trace(BlSPlBlT) i!2 ·  −2(ck −cl)  − N ∑ l̸=k µPl − µPk  2 2 − cl −ck 2 2  + h trace(SPl)−trace(BlSPlBlT)+trace(SPk)−trace(BkSPkBkT) i!2 ·  −2(cl −ck)  = N ∑ l̸=k µPk − µPl  2 2 − ck −cl 2 2  + h trace(SPk)−trace(BkSPkBkT)+trace(SPl)−trace(BlSPlBlT) i!2 ·  −4(ck −cl)  , ∂ ∂Bk ∑ i,j µPi − µPj  2 2 − ci −cj 2 2  + h trace(SPi)−trace(BiSPiBiT)+trace(SPj)−trace(BjSPjB jT) i!2 = N ∑ l=1 µPk − µPl  2 2 − ck −cl 2 2  + h trace(SPk)−trace(BkSPkBkT)+trace(SPl)−trace(BlSPlBlT) i!2 ·  −2BkSPk  + N ∑ l=1 µPl − µPk  2 2 − cl −ck 2 2  + h trace(SPl)−trace(BlSPlBlT)+trace(SPk)−trace(BkSPkBkT) i!2 ·  −2BkSPk  = N ∑ l=1 µPk − µPl  2 2 − ck −cl 2 2  + h trace(SPk)−trace(BkSPkBkT)+trace(SPl)−trace(BlSPlBlT) i!2 ·  −4BkSPk  . 11 5 ADDITIONAL VISUALIZATIONS In this section, we provide additional visualizations that are not part of the main paper. Furthermore, figures that appeared to be small in the paper, are shown as full frame versions for better readability. 5.1 Student Grades Data Set Fig. 1 shows UA-PCA [2] and UAMDS projections of the student grades data set with our second modeling of textual grade descriptions. It also shows the Shepard diagrams for covariance trace and anisotropy as well as the pairwise stress components for UA-PCA (middle row) and UAMDS (bottom row). It can be seen that the trace of the covariances (cf. Subfigures (d) and (h)) is preserved better with UAMDS than with UA-PCA. The anisotropy preservation (cf. Subfigures (e) and (i)) is similar between UA-PCA and UAMDS, most points are close to the diagonal. The outliers, e.g., blue and brown that correspond to distributions of David and Jack, are represented more isotropic than in high-dimensional space. From the stress component scatter plots, it can be seen that UAMDS improves on the volume of Tom’s projected distribution as indicated by the red dot in Subfigures (f) and (j). This means that the larger spread of the distribution in the UAMDS projection is more faithful to the data. 5.2 Pokemon Data Set Fig. 2 is a copy of Figure 9 from the main paper but spanning over a larger area for better readability. Fig. 3 shows UA-PCA and UAMDS projections of the first 151 Pokemon (generation 1) of the Pokemon stats data set. It also shows the Shepard diagrams for covariance trace and anisotropy as well as the pairwise stress components for UA-PCA (middle row) and UAMDS (bottom row). UA-PCA was used as initialization for UAMDS. In this way, the projections are easier to compare, since it makes UAMDS converge to a solution close to the UA-PCA projection and also eliminates possible rotated or reflected UAMDS variants. It can be seen that covariance traces are all underestimated by UA-PCA. UAMDS manages to preserve some of the covariance traces. The anisotropy is overestimated by UAMDS for unusual (outlier) Pokemon (such as Chansey or Jigglypuff), and pairings with these. UA-PCA manages to preserve anisotropy better in this case, but has a tendency to underestimate. We believe that UA-PCA provides a more trustworthy projection in this case due to the nature of the data set. When looking at the data distributions in the first plot, it can be seen that variability is very similar for each Pokemon and each dimension. All covariances are rather isotropic, so that UAMDS’ ability to project each distribution differently has less use. This is different for the student grades data set shown in Fig. 1, where distributions are more anisotropic. 5.3 MNIST Data Set For the curious reader, we provide a UAMDS projection of the MNIST data set [1] consisting of images of written digits. While the different digit classes (0 to 9) are not normally distributed, we estimate their distribution as such nonetheless. The resulting UAMDS projection of the distributions and the individual data points are shown in Fig. 4. From the highlighted data points for class 0, 1, and 5, it can be seen that the projected data is not normally distributed, still we can get a sense of spread and density of the data. The shown similarity of the distribution barycenters are convincing, e.g., similarly shaped digits three, eight, and five are close. REFERENCES [1] L. Deng. The MNIST database of handwritten digit images for machine learning research [best of the web]. IEEE Signal Processing Magazine, 29(6):141–142, 2012. doi: 10.1109/MSP.2012.2211477 [2] J. G¨ortler, T. Spinner, D. Streeb, D. Weiskopf, and O. Deussen. Uncertainty-aware principal component analysis. IEEE Transactions on Visualization and Computer Graphics, 26(1):822–831, 2020. doi: 10.1109/TVCG.2019.2934812 [3] D. H¨agele, T. Krake, and D. Weiskopf. Uncertainty-aware multidimensional scaling. IEEE Transactions on Visualization and Computer Graphics, 29(1), 2023. doi: 10.1109/TVCG.2022.3209420 12 M1 0 10 20 30 M2 0 10 20 30 P1 0 10 20 30 P2 0 10 20 30 (a) data (b) UA-PCA (c) UAMDS highdim tr(cov_i + cov_j) lowdim tr(cov_i + cov_j) 0 3 6 9 0 3 6 9 (d) Shepard trace highdim frac. anisotropy lowdim frac. anisotropy 0 0.25 0.5 0.75 1 0 0.25 0.5 0.75 1 (e) Shepard anisotropy stress comp S1 (volume) stress comp S2 (orientation) 0 0.15 0.3 0.45 0 0.15 0.3 0.45 (f) stress 1,2 stress comp S2 (orientation)... stress comp S3 (distance) 0 0.15 0.3 0.45 0.6 0 0.15 0.3 0.45 0.6 (g) stress 2,3 highdim tr(cov_i + cov_j) lowdim tr(cov_i + cov_j) 0 3 6 9 0 3 6 9 (h) Shepard trace highdim frac. anisotropy lowdim frac. anisotropy 0 0.25 0.5 0.75 1 0 0.25 0.5 0.75 1 (i) Shepard anisotropy stress comp S1 (volume) stress comp S2 (orientation) 0 0.15 0.3 0.45 0 0.15 0.3 0.45 (j) stress 1,2 stress comp S2 (orientation)... stress comp S3 (distance) 0 0.15 0.3 0.45 0.6 0 0.15 0.3 0.45 0.6 (k) stress 2,3 Fig. 1. Student grades data set projections and quality assessment. Middle row corresponds to UA-PCA, bottom row to UAMDS. Subfigures (b) and (c) are copies of Figure 8 (right-hand side) from the main document [3] licensed under a Creative Commons Attribution License (CC BY 4.0). 13 Fig. 2. UAMDS projection of the first 15 Pokemon from the Pokemon data set. Left uses coloring by type of Pokemon (bug, fire, grass, water) to show relationships among Pokemon, e.g., all fire Pokemon belong to the Charmander evolution family. Right side color codes the stress of projected distributions. Visualized on the bottom are the projection matrices of the affine transformations for the individual Pokemon, where each column of the matrix is depicted as a direction into which the corresponding stat it is projected. Copy of Figure 9 from the main document [3] licensed under a Creative Commons Attribution License (CC BY 4.0). 14 (a) data X Y -200 -100 0 100 200 -200 -100 0 100 200 Bulbasaur Ivysaur Venusaur Charmander Charmeleon Charizard Squirtle Wartortle Blastoise Caterpie Metapod Butterfree Weedle Kakuna Beedrill Pidgey Pidgeotto Pidgeot Rattata Raticate Spearow Fearow Ekans Arbok Pikachu Raichu Sandshrew Sandslash Nidoran (female) Nidorina Nidoqueen Nidoran (male) Nidorino Nidoking Clefairy Clefable Vulpix Ninetales Jigglypuff Wigglytuff Zubat Golbat Oddish Gloom Vileplume Paras Parasect Venonat Venomoth Diglett Dugtrio Meowth Persian Psyduck Golduck Mankey Primeape Growlithe Arcanine Poliwag Poliwhirl Poliwrath Abra Kadabra Alakazam Machop Machoke Machamp Bellsprout Weepinbell Victreebel Tentacool Tentacruel Geodude Graveler Golem Ponyta Rapidash Slowpoke Slowbro Magnemite Magneton Farfetch'd Doduo Dodrio Seel Dewgong Grimer Muk Shellder Cloyster Gastly Haunter Gengar Onix Drowzee Hypno Krabby Kingler Voltorb Electrode Exeggcute Exeggutor Cubone Marowak Hitmonlee Hitmonchan Lickitung Koffing Weezing Rhyhorn Rhydon Chansey Tangela Kangaskhan Horsea Seadra Goldeen Seaking Staryu Starmie Mr. Mime Scyther Jynx Electabuzz Magmar Pinsir Tauros Magikarp Gyarados Lapras Ditto Eevee Vaporeon Jolteon Flareon Porygon Omanyte Omastar Kabuto Kabutops Aerodactyl Snorlax Articuno Zapdos Moltres Dratini Dragonair Dragonite Mewtwo Mew (b) UA-PCA X Y -200 -100 0 100 200 -200 -100 0 100 200 Bulbasaur Ivysaur Venusaur Charmander Charmeleon Charizard Squirtle Wartortle Blastoise Caterpie Metapod Butterfree Weedle Kakuna Beedrill Pidgey Pidgeotto Pidgeot Rattata Raticate Spearow Fearow Ekans Arbok Pikachu Raichu Sandshrew Sandslash Nidoran (female) Nidorina Nidoqueen Nidoran (male) Nidorino Nidoking Clefairy Clefable Vulpix Ninetales Jigglypuff Wigglytuff Zubat Golbat Oddish Gloom Vileplume Paras Parasect Venonat Venomoth Diglett Dugtrio Meowth Persian Psyduck Golduck Mankey Primeape Growlithe Arcanine Poliwag Poliwhirl Poliwrath Abra Kadabra Alakazam Machop Machoke Machamp Bellsprout Weepinbell Victreebel Tentacool Tentacruel Geodude Graveler Golem Ponyta Rapidash Slowpoke Slowbro Magnemite Magneton Farfetch'd Doduo Dodrio Seel Dewgong Grimer Muk Shellder Cloyster Gastly Haunter Gengar Onix Drowzee Hypno Krabby Kingler Voltorb Electrode Exeggcute Exeggutor Cubone Marowak Hitmonlee Hitmonchan Lickitung Koffing Weezing Rhyhorn Rhydon Tangela Kangaskhan Horsea Seadra Goldeen Seaking Staryu Starmie Mr. Mime Scyther Jynx Electabuzz Magmar Pinsir Tauros Magikarp Gyarados Lapras Ditto Eevee Vaporeon Jolteon Flareon Porygon Omanyte Omastar Kabuto Kabutops Aerodactyl Snorlax Chansey Articuno Zapdos Moltres Dratini Dragonair Dragonite Mewtwo Mew (c) UAMDS (d) Shepard trace (e) Shepard anisotropy (f) stress 1,2 (g) stress 2,3 (h) Shepard trace (i) Shepard anisotropy (j) stress 1,2 (k) stress 2,3 Fig. 3. Pokemon stats data set projections and quality assessment. Middle row corresponds to UA-PCA, bottom row to UAMDS. 15 (a) UAMDS densities (b) UAMDS projected data (c) class 0 (d) class 1 (e) class 5 Fig. 4. UAMDS projection of MNIST data set. (a) shows the projected probability densities for each digit assuming data is normally distributed. The other plots show the projection of the actual data points. 16 